#version 430 core
layout(local_size_x = 256) in;

layout(std430, binding = 0) buffer Positions {
    vec4 positions[];
};

layout(binding = 1) uniform sampler2D voronoiMap;

uniform uint bladesX;
uniform uint bladesZ;
uniform vec2 tileSize;

void main() {
    uint idx   = gl_GlobalInvocationID.x;
    uint total = bladesX * bladesZ;
    if (idx >= total) return;

    uint ix = idx % bladesX;
    uint iz = idx / bladesX;

    float fx = (float(ix) + 0.5) / float(bladesX) * tileSize.x - tileSize.x * 0.5;
    float fz = (float(iz) + 0.5) / float(bladesZ) * tileSize.y - tileSize.y * 0.5;

    vec2 uv = vec2(fx + tileSize.x * 0.5, fz + tileSize.y * 0.5) / tileSize;

    vec4 voronoi = texture(voronoiMap, uv);

    vec2 offset = voronoi.xy;

    float clumpStrength = 10.0;

    fx += offset.x * clumpStrength;
    fz += offset.y * clumpStrength;

    positions[idx] = vec4(fx, 3.0, fz, voronoi.w);
}
