#version 430 core
layout(local_size_x = 256) in;

struct BladeIndex {
    float distance;
    uint index;
};

uniform vec3 cameraPos;

uniform uint sortK;
uniform uint sortJ;

layout(std430, binding = 0) buffer SortedIndices {
    BladeIndex bladeIndicies[];
};

// parallel quicksort 
void main(){
        
    // calculate distance to camera
    uint idx = gl_GlobalInvocationID.x;
    //if (idx >= bladeIndicies.length()) return;

    uint ixj = idx ^ sortJ;

    if (ixj > idx){
        bool ascending = ((idx & sortK) == 0);
        BladeIndex a = bladeIndicies[idx];
        BladeIndex b = bladeIndicies[ixj];

        if ((a.distance > b.distance) == ascending){
            // swap
            bladeIndicies[idx] = b;
            bladeIndicies[ixj] = a;
        }
    }
   
}